{"remainingRequest":"/Users/rp/Desktop/wsq框架/base-framework/node_modules/babel-loader/lib/index.js!/Users/rp/Desktop/wsq框架/base-framework/node_modules/eslint-loader/index.js??ref--13-0!/Users/rp/Desktop/wsq框架/base-framework/src/api/requst.js","dependencies":[{"path":"/Users/rp/Desktop/wsq框架/base-framework/src/api/requst.js","mtime":1617088129589},{"path":"/Users/rp/Desktop/wsq框架/base-framework/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rp/Desktop/wsq框架/base-framework/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/rp/Desktop/wsq框架/base-framework/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy50cmltLWVuZC5qcyI7CmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7IC8vIOWfuuehgOmFjee9rgoKdmFyIHNlcnZpY2UgPSBheGlvcy5jcmVhdGUoewogIGJhc2VVUkw6ICcnLAogIHRpbWVvdXQ6IDEwMDAwCn0pOyAvLyDnvZHnu5zor7fmsYLliY3mi6bmiKrphY3nva4KCnNlcnZpY2UuaW50ZXJjZXB0b3JzLnJlcXVlc3QudXNlKGZ1bmN0aW9uIChjb25maWcpIHsKICAvLyDorr7nva7or7fmsYLlpLQgdG9va2VuIOS5i+exu+eahAogIGNvbmZpZy5oZWFkZXJzWyJBdXRob3JpemF0aW9uIl0gPSAiQmVhcmVyICIgKyAneHh4eHh4JzsKfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKfSk7IC8vIOe9kee7nOaVsOaNrui/lOWbnuWJjemFjee9rgoKc2VydmljZS5pbnRlcmNlcHRvcnMucmVzcG9uc2UudXNlKGZ1bmN0aW9uIChyZXNwb25zZSkgewogIHZhciByZXMgPSByZXNwb25zZTsgLy/mraPluLjov5Tlm54KCiAgcmV0dXJuIHJlczsKfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKfSk7IC8vIOWPguaVsOaLvOaOpQoKdmFyIHNlcmlhbGl6ZSA9IGZ1bmN0aW9uIHNlcmlhbGl6ZShvYmopIHsKICB2YXIgc3RyID0gIiI7CgogIGlmIChvYmogPT0gbnVsbCB8fCBvYmogPT0gdW5kZWZpbmVkKSB7CiAgICByZXR1cm4gc3RyOwogIH0KCiAgT2JqZWN0LmtleXMob2JqKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsKICAgIHN0ciArPSAiIi5jb25jYXQoa2V5LCAiPSIpLmNvbmNhdChvYmpba2V5XSwgIiYiKTsKICB9KTsKICByZXR1cm4gc3RyLnRyaW1SaWdodCgnJicpOwp9OyAvLyDor7fmsYLlj5HotbcKCgp2YXIgcmVxdWVzdCA9IGZ1bmN0aW9uIHJlcXVlc3QodHlwZSwgdXJsLCBwYXJhbXMpIHsKICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgc3dpdGNoICh0eXBlKSB7CiAgICAgIC8vIGdldCDmlrnms5UKICAgICAgY2FzZSAiZ2V0IjoKICAgICAgICBzZXJ2aWNlLmdldCh1cmwsIHsKICAgICAgICAgIHBhcmFtczogcGFyYW1zCiAgICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICByZXNvbHZlKHJlcy5kYXRhKTsKICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICAgIHJlamVjdChlcnJvcik7CiAgICAgICAgfSk7CiAgICAgICAgYnJlYWs7CiAgICAgIC8vIHBvc3Qg5bi46KeEKGZvcm0tZGF0YSkKCiAgICAgIGNhc2UgInBvc3QiOgogICAgICAgIHNlcnZpY2UuZGVmYXVsdHMuaGVhZGVycyA9IHsKICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJwogICAgICAgIH07CiAgICAgICAgcGFyYW1zID0gc2VyaWFsaXplKHBhcmFtcyk7CiAgICAgICAgc2VydmljZS5wb3N0KHVybCwgcGFyYW1zKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgIHJlc29sdmUocmVzLmRhdGEpOwogICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgICAgcmVqZWN0KGVycm9yKTsKICAgICAgICB9KTsKICAgICAgICBicmVhazsKICAgICAgLy8gcG9zdCBqc29uCgogICAgICBjYXNlICJqc29uIjoKICAgICAgICBzZXJ2aWNlLmRlZmF1bHRzLmhlYWRlcnMgPSB7CiAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nCiAgICAgICAgfTsKICAgICAgICBzZXJ2aWNlLnBvc3QodXJsLCBwYXJhbXMpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgcmVzb2x2ZShyZXMuZGF0YSk7CiAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgICByZWplY3QoZXJyb3IpOwogICAgICAgIH0pOwogICAgICAgIGJyZWFrOwogICAgfQogIH0pOwp9OwoKZXhwb3J0IGRlZmF1bHQgewogIHJlcXVlc3Q6IHJlcXVlc3QKfTs="},{"version":3,"sources":["/Users/rp/Desktop/wsq框架/base-framework/src/api/requst.js"],"names":["axios","service","create","baseURL","timeout","interceptors","request","use","config","headers","error","Promise","reject","response","res","serialize","obj","str","undefined","Object","keys","forEach","key","trimRight","type","url","params","resolve","get","then","data","catch","defaults","post"],"mappings":"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","sourcesContent":["import axios from \"axios\"\n\n\n// 基础配置\nconst service = axios.create({\n    baseURL: '',\n    timeout: 10000\n});\n\n\n// 网络请求前拦截配置\nservice.interceptors.request.use(\n    config => {\n\n        // 设置请求头 tooken 之类的\n        config.headers[\"Authorization\"] = \"Bearer \" + 'xxxxxx';\n      \n    },\n\n    error => {\n        return Promise.reject(error)\n    }\n\n);\n\n// 网络数据返回前配置\nservice.interceptors.response.use(\n    response => {\n        const res = response; //正常返回\n        return res\n    },\n    error => {\n        return Promise.reject(error)\n    }\n);\n\n\n\n// 参数拼接\nvar serialize = function (obj) {\n    var str = \"\";\n    if (obj == null || obj == undefined) {\n        return str\n    }\n\n    Object.keys(obj).forEach(function (key) {\n        str += `${key}=${obj[key]}&`;\n    });\n\n    return str.trimRight('&');\n}\n\n\n\n// 请求发起\nconst request = (type, url, params) => {\n    \n    return new Promise((resolve, reject) => {\n\n        switch (type) {\n            \n            // get 方法\n            case \"get\":\n                service.get(url,{\n                    params\n                }).then(res => {\n                    resolve(res.data)\n                    \n                }).catch(error => {\n                    reject(error)\n                })\n                break;\n            \n            // post 常规(form-data)\n            case \"post\":\n                service.defaults.headers = {\n                    'Content-Type': 'application/x-www-form-urlencoded'\n                };\n                params = serialize(params)\n                service.post(url, params).then(res => {\n                    resolve(res.data)\n                    \n                }).catch(error => {\n                    reject(error)\n                })\n                break;\n            \n              // post json\n              case \"json\":\n                service.defaults.headers = {\n                    'Content-Type': 'application/json'\n                };\n                service.post(url, params).then(res => {\n                    resolve(res.data)\n                    \n                }).catch(error => {\n                    reject(error)\n                })\n                break;\n        }\n        \n    })\n}\n\nexport default {\n    request,\n}"]}]}